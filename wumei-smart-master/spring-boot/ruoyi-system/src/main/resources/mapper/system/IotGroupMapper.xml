<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.IotGroupMapper">

    <resultMap type="IotGroup" id="IotGroupResult">
        <result property="groupId" column="group_id"/>
        <result property="userId" column="user_id"/>
        <result property="groupName" column="group_name"/>
        <result property="groupOrder" column="group_order"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectIotGroupVo">
        select group_id, user_id, group_name, group_order, del_flag, create_by, create_time, update_by, update_time,
        remark from iot_group
    </sql>

    <select id="selectIotGroupList" parameterType="IotGroup" resultMap="IotGroupResult">
        <include refid="selectIotGroupVo"/>
        <where>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="groupName != null  and groupName != ''">and group_name like concat('%', #{groupName}, '%')</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and create_time between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
        </where>
    </select>

    <select id="selectIotGroupById" parameterType="Long" resultMap="IotGroupResult">
        <include refid="selectIotGroupVo"/>
        where group_id = #{groupId}
    </select>

    <insert id="insertIotGroup" parameterType="IotGroup" useGeneratedKeys="true" keyProperty="groupId">
        insert into iot_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="groupName != null and groupName != ''">group_name,</if>
            <if test="groupOrder != null">group_order,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="groupName != null and groupName != ''">#{groupName},</if>
            <if test="groupOrder != null">#{groupOrder},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateIotGroup" parameterType="IotGroup">
        update iot_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="groupName != null and groupName != ''">group_name = #{groupName},</if>
            <if test="groupOrder != null">group_order = #{groupOrder},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where group_id = #{groupId}
    </update>

    <delete id="deleteIotGroupById" parameterType="Long">
        delete from iot_group where group_id = #{groupId}
    </delete>

    <delete id="deleteIotGroupByIds" parameterType="String">
        delete from iot_group where group_id in
        <foreach item="groupId" collection="array" open="(" separator="," close=")">
            #{groupId}
        </foreach>
    </delete>
</mapper>